================================================================================
            	      	BNET_FRAMEWORK by: BahamaGames
================================================================================
Call-backs are essentially notifications that the client receives from the server
during some form of request, or server end event.

You can access these call-backs by using the enum 'bnet_callback'.

Some call-backs return a macro 'bnet_callback_load' that stores a ds_map with 
useful information for READ USE ONLY, DO NOT PASS IT ON, OR DESTORY!!!

Most call-backs has an onError call-back code go to Error-Codes within note 
section for more info.

These ds_maps are auto destroyed by bnet to prevent memory leak. If wish to use 
outside the call-back scope, it's suggested to copy essitianl info, or the ds-map
to a pre existing one. The bare minimum setup would be like so:

//Since there can be multiple call-backs per step lets loop through them.
while(bnet_data_start){

	//Iterate through them.
	switch(bnet_callback){
		
		case bnet_callbacks.onError:
			show_debug_message("Error: "+bnet_callback_load[? "error"]);
		break;
	
		case bnet_callbacks.connected:
			show_debug_message("connected");
		break;
		
		case bnet_callbacks.disconnected:
			show_debug_message("disconnected");
		break;
		
		case bnetcallbacks.client_connected:
			var client = bnet_callback_load;
			
			show_debug_message(client[? "id"] +" : "+client[? "name"]+ "connected").
		break;
		
		case bnetcallbacks.client_disconnected:
			var client = bnet_callback_load;
			
			show_debug_message(client[? "id"] +" : "+client[? "name"]+ "disconnected").
		break;
	
	}
	
	//Clean up the callback data.
	bnet_data_end;
}

================================================================================

Heres a list of all call-backs with respective 'bnet_callback_load' information.

Some call-backs returns a 'deserialize' ds_map of a 'Client', and or 'Instance'. 
To help me not copy and past here's a general look of what a deserialize client, 
and instance would look like.

================================================================================
		Client				|				Instance
================================================================================
[? "id"]	[? "tcp_port"]	|	[? "id"]	[? "depth"]			[? "layer"]
[? "name"]	[? "udp_port"]	|	[? "x"]		[? "object_index"]	[? "owner_id"]
[? "ip"]	[?"ping"]		|	[? "y"]		[? "sprite_index"]	[? "create_data"]
[? "room"]					|
================================================================================

Error

	bnet_callbacks.onError
		
		{string}	bnet_callback_load[? "error"]				String error code.

Connection

	bnet_callbacks.server_created
	
		{ds_map}	bnet_callback_load[? "client_map"]			A ds_map of all deserialize clients connected to the server. 
		{ds_list}	bnet_callback_load[? "client_list"]			A ds_list of all deserialize clients connected to the server.
		
	bnet_callbacks.server_shutting_down
	
		{real}		bnet_callback_load[? "timer"]				Countdown timer for server shut down.

	bnet_callbacks.connected
	
		{ds_map}	bnet_callback_load[? "client_map"]			A ds_map of all deserialize clients connected to the server. 
		{ds_list}	bnet_callback_load[? "client_list"]			A ds_list of all deserialize clients connected to the server.

	bnet_callbacks.client_connected
	
		{ds_map}	Deserialize client							Who connected to the server.
		
	bnet_callbacks.client_disconnected
	
		{ds_map}	Deserialize client							Who disconnected from the server.
		
Version Check
	
	bnet_callbacks.version_checked
	
		{string}	bnet_callback_load[? "version"]				Server version.

Chat
	Text
	
	bnet_callbacks.chat_updated
		
		{ds_map}	Deserialize client							Who sent the text message.
		{string}	bnet_callback_load[? "list"]				List which the message was received.
		{string}	bnet_callback_load[? "message"]				Message that was sent.
	
	Voip
	
	bnet_callbacks.voip_updated
	
		{ds_map}	Deserialize client							Who sent the voice message.
		{aud_buff}	bnet_callback_load[? "audio"]				Audio buffer sound 'audio_create_buffer_sound' that was sent.
		{real}		bnet_callback_load[? "sample_rate"]			Audio sample rate.
		{string}	bnet_callback_load[? "list"]				List which the audio was received.
		{bufferid}	bnet_callback_load[? "buffer"]				Buffer associated with audio.
		{real}		bnet_callback_load[? "size"]				Size of the audio buffer.
		{real}		bnet_callback_load[? "duration"]			Duration of the voice message.
		{bool}		bnet_callback_load[? "tcp"]					A boolean depicting if the voice message was sent over tcp rather than udp.
	
Room

	bnet_callbacks.room_joined
	
		{string}	bnet_callback_load[? "id"]					Room id.
		{string}	bnet_callback_load[? "host"]				Client's id whom is host of the room. Note: The host acts as server host to transmit npc data.
		{ds_map}	bnet_callback_load[? "client_map"]			A ds_map of all deserialize clients within the room. 
		{ds_list}	bnet_callback_load[? "client_list"]			A ds_list of all deserialize clients within the room.
		{ds_map}	bnet_callback_load[? "instance_map"]		A ds_map of all the deserialize instances within the room.
		{ds_list}	bnet_callback_load[? "instance_list"]		A ds_list of all the deserialize instances within the room.
		
	bnet_callbacks.room_updated
		
		{ds_map}	Deserialize client							Client who is host.
		{string}	bnet_callback_load[? "room_id"]				Room id.
		{bool}		bnet_callback_load[? "destroy"]				A boolean depicting whether the room is set to auto destroy when empty.
		
	bnet_callbacks.room_client_joined
	
		{ds_map}	Deserialize client							Who joined the room.
		
	bnet_callbacks.room_client_lefted
	
		{ds_map}	Deserialize client							Who lefted the room.
		{string}	bnet_callback_load[? "host"]				Client's id whom is host of the room. Note: The host acts as server host to transmit npc data.
		
Instance

	bnet_callbacks.instance_created
		
		{ds_map}	Deserialize instance						Instance that was broadcasted to be created.
		
	bnet_callbacks.instance_destroyed
	
		{string}	bnet_callback_load[? "id"]					Instance's id that was destroyed.
		
	bnet_callbacks.instance_updated
										
		{string}	bnet_callback_load[? "id"]					Instance's id that was broadcasted.
		{real}		bnet_callback_load[? "x"]					Instance's x that was broadcasted.
		{real}		bnet_callback_load[? "y"]					Instance's y that was broadcasted.
		{real}		bnet_callback_load[? "object_index"]		Instance's object_index that was broadcasted.
		{real}		bnet_callback_load[? "sprite_index"]		Instance's sprite_index that was broadcasted.
		{bufferid}	bnet_callback_load[? "buffer"]				Instance's sync variables that was broadcasted.
		
File 
	
	bnet_callbacks.file_loaded
	
		{ds_map/-1}	bnet_callback_load							The ds_map of the file loaded. Returns -1 if parse failed.
		
Namespace 
	
	bnet_callbacks.namespace_created
		
		{string}	bnet_callback_load[? "name"]				Name of the namespace that was created.
		
	bnet_callbacks.namespace_updated
		
		{string}	bnet_callback_load[? "name"]				Name of the namespace that was updated.
		{ds_list}	bnet_callback_load[? "client_list"]			A ds_list of all deserialize clients within the namespace.
		{ds_map}	bnet_callback_load[? "client_map"]			A ds_map of all the deserialize instances within the namespace.
		
	bnet_callbacks.namespace_destroyed
		
		{string}	bnet_callback_load[? "name"]				Name of the namespace that was destroyed.

MongoDB
	
	DATABASE
	
	bnet_callbacks.mongodb_database_created
		
		{string}	bnet_callback_load[? "name"]				Name of the database that was created.
		
	bnet_callbacks.mongodb_databases_loaded
		
		{string}	bnet_callback_load[? "name"]				Name of the database that was loaded.
		{ds_list}	bnet_callback_load[? "databases"]			A ds_list of ds_maps containing each database. Individuals may return -1 if parse failed.
		
	bnet_callbacks.mongodb_database_destroyed
		
		{string}	bnet_callback_load[? "name"]				Name of the database that was created.
		
	COLLECTION
	
	bnet_callbacks.mongodb_collection_created
	
		{string}	bnet_callback_load[? "database_name"]		Name of the database the collection was created within.
		{string}	bnet_callback_load[? "collection_name"]		Name of the collection created.
		
	bnet_callbacks.mongodb_collections_loaded
		
		{string}	bnet_callback_load[? "database_name"]		Name of the database the collection(s) was loaded within.
		{string}	bnet_callback_load[? "collection_name"]		Name of the collection(s) loaded.
		{ds_list}	bnet_callback_load[? "collections"]			A ds_list of ds_maps containing each or specfic collection within the database. Individuals may return -1 if parse failed.
		
	bnet_callbacks.mongodb_collection_destroyed
	
		{string}	bnet_callback_load[? "database_name"]		Name of the database the collection was desstroyed within.
		{string}	bnet_callback_load[? "collection_name"]		Name of the collection that was destroyed.
		
	DOCUMENTS
	
	bnet_callbacks.mongodb_document_created
		
		{string}	bnet_callback_load[? "database_name"]		Name of the database the document was created in.
		{string}	bnet_callback_load[? "collection_name"]		Name of the collection the document was created in.
		{string}	bnet_callback_load[? "document_key"]		The key for "_id" of the document that was created.
		
	bnet_callbacks.mongodb_documents_loaded
		
		{string}	bnet_callback_load[? "database_name"]		Name of the database the document(s) was loaded in.
		{string}	bnet_callback_load[? "collection_name"]		Name of the collection the document(s) was loaded in.
		{string}	bnet_callback_load[? "document_key"]		The key for "_id" of the document(s) that was loaded.
		{ds_list}	bnet_callback_load[? "documents"]			A ds_list of ds_maps containing each or specfic document within the collection. Individuals may return undefined if parse failed.
		
	bnet_callbacks.mongodb_document_updated
		
		{string}	bnet_callback_load[? "database_name"]		Name of the database the document was updated in.
		{string}	bnet_callback_load[? "collection_name"]		Name of the collection the document was updated in.
		{string}	bnet_callback_load[? "document_key"]		The key for "_id" of the document that was updated.
		
	bnet_callbacks.mongodb_document_destroyed
		
		{string}	bnet_callback_load[? "database_name"]		Name of the database the document was destroyed in.
		{string}	bnet_callback_load[? "collection_name"]		Name of the collection the document was destroyed in.
		{string}	bnet_callback_load[? "document_key"]		The key for "_id" of the document that was destroyed.